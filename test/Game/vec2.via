pragma optimize(2)

macro square(a) { a ^ 2 }

struct Vec2 {
    let x: float = 0.0
    let y: float = 0.0

    @inline
    fn to_string() -> string {
        return "Vec2(${self.x}, ${self.y})"
    }

    fn magnitude() -> float {
        return math.sqrt(square!(self.x) + square!(self.y))
    }

    fn normalize() -> Vec2 {
        let mag = self.magnitude()
        if mag == 0 {
            return Vec2::new()
        }
        
        return Vec2::new(self.x / mag, self.y / mag)
    }

    fn new(x: float, y: float) {
        self.x = x
        self.y = y
    }
}

export Vec2
