digraph "src/interpreter/instruction.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="src/interpreter/instruction.h",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Defines the representation of bytecode instructions in the Via VM."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="src/codegen/bytecode\l-builder.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bytecode-builder_8h.html",tooltip="Declares the BytecodeBuilder class along with utility."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="src/codegen/bytecode\l-builder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bytecode-builder_8cpp.html",tooltip="BytecodeBuilder class imeplementation."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="src/codegen/register.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$register_8h.html",tooltip="Declares compile-time register semantics."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="src/codegen/visitor.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$visitor_8h.html",tooltip="Declares visitor interfaces for the Abstract Syntax Tree (AST) used in the via compiler."];
  Node5 -> Node2 [id="edge5_Node000005_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node6 [id="edge6_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="src/codegen/stack.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$stack_8h.html",tooltip="Declares stack structures used by the compiler."];
  Node6 -> Node7 [id="edge7_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="src/codegen/types.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$types_8h.html",tooltip="Declares all compilation-time type related core and utilities."];
  Node7 -> Node2 [id="edge8_Node000007_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node5 [id="edge9_Node000006_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node8 [id="edge10_Node000006_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="src/context.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$context_8h_source.html",tooltip=" "];
  Node8 -> Node9 [id="edge11_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="include/via/via.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$via_8h_source.html",tooltip=" "];
  Node9 -> Node10 [id="edge12_Node000009_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CLI/handlers.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$handlers_8h_source.html",tooltip=" "];
  Node8 -> Node7 [id="edge13_Node000008_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node5 [id="edge14_Node000008_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node11 [id="edge15_Node000008_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="src/error-bus.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$error-bus_8h_source.html",tooltip=" "];
  Node11 -> Node5 [id="edge16_Node000011_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node12 [id="edge17_Node000011_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="src/parse/parser.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$parser_8h_source.html",tooltip=" "];
  Node12 -> Node9 [id="edge18_Node000012_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node13 [id="edge19_Node000008_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="src/interpreter/state.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$state_8h.html",tooltip="Declares the State class and related components for managing VM execution."];
  Node13 -> Node9 [id="edge20_Node000013_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node2 [id="edge21_Node000013_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node4 [id="edge22_Node000013_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node5 [id="edge23_Node000013_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node14 [id="edge24_Node000013_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="src/interpreter/api\l-impl.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$api-impl_8h.html",tooltip="Internal interpreter API implementation."];
  Node8 -> Node15 [id="edge25_Node000008_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="src/lex/lexer.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$lexer_8h_source.html",tooltip=" "];
  Node15 -> Node9 [id="edge26_Node000015_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node13 [id="edge27_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge28_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="src/interpreter/tfunction.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$tfunction_8h.html",tooltip="Declares function, closure, and upvalue types used for virtual machine function invocation."];
  Node16 -> Node14 [id="edge29_Node000016_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node17 [id="edge30_Node000016_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="src/interpreter/call\l-stack.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$call-stack_8h.html",tooltip="Defines the call stack and call frame structures for function execution."];
  Node17 -> Node13 [id="edge31_Node000017_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
