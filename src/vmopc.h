// This file is a part of the via Programming Language project
// Copyright (C) 2024-2025 XnLogical - Licensed under GNU GPL v3.0

#ifndef VIA_OPCODE_H
#define VIA_OPCODE_H

#include "common.h"

namespace via {

namespace vm {

enum Opcode : uint16_t {
  VOP_NOP,
  VOP_LBL,
  VOP_EXIT,
  VOP_ADD,
  VOP_IADD,
  VOP_FADD,
  VOP_SUB,
  VOP_ISUB,
  VOP_FSUB,
  VOP_MUL,
  VOP_IMUL,
  VOP_FMUL,
  VOP_DIV,
  VOP_IDIV,
  VOP_FDIV,
  VOP_MOD,
  VOP_IMOD,
  VOP_FMOD,
  VOP_POW,
  VOP_IPOW,
  VOP_FPOW,
  VOP_NEG,
  VOP_MOV,
  VOP_LOADK,
  VOP_LOADNIL,
  VOP_LOADI,
  VOP_LOADF,
  VOP_LOADBT,
  VOP_LOADBF,
  VOP_LOADARR,
  VOP_LOADDICT,
  VOP_CLOSURE,
  VOP_PUSH,
  VOP_PUSHK,
  VOP_PUSHNIL,
  VOP_PUSHI,
  VOP_PUSHF,
  VOP_PUSHBT,
  VOP_PUSHBF,
  VOP_DROP,
  VOP_GETGLOBAL,
  VOP_SETGLOBAL,
  VOP_SETUPV,
  VOP_GETUPV,
  VOP_GETLOCAL,
  VOP_SETLOCAL,
  VOP_GETARG,
  VOP_CAPTURE,
  VOP_EQ,
  VOP_DEQ,
  VOP_NEQ,
  VOP_AND,
  VOP_OR,
  VOP_NOT,
  VOP_LT,
  VOP_GT,
  VOP_LTEQ,
  VOP_GTEQ,
  VOP_JMP,
  VOP_JMPIF,
  VOP_JMPIFN,
  VOP_JMPIFEQ,
  VOP_JMPIFNEQ,
  VOP_JMPIFLT,
  VOP_JMPIFGT,
  VOP_JMPIFLTEQ,
  VOP_JMPIFGTEQ,
  VOP_LJMP,
  VOP_LJMPIF,
  VOP_LJMPIFN,
  VOP_LJMPIFEQ,
  VOP_LJMPIFNEQ,
  VOP_LJMPIFLT,
  VOP_LJMPIFGT,
  VOP_LJMPIFLTEQ,
  VOP_LJMPIFGTEQ,
  VOP_CALL,
  VOP_PCALL,
  VOP_RET,
  VOP_RETBT,
  VOP_RETBF,
  VOP_RETNIL,
  VOP_GETARR,
  VOP_SETARR,
  VOP_NEXTARR,
  VOP_LENARR,
  VOP_GETDICT,
  VOP_SETDICT,
  VOP_NEXTDICT,
  VOP_LENDICT,
  VOP_CONSTR,
  VOP_GETSTR,
  VOP_SETSTR,
  VOP_LENSTR,
  VOP_ICAST,
  VOP_FCAST,
  VOP_STRCAST,
  VOP_BCAST,
};

}

} // namespace via

#endif
